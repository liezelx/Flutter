import 'package:flutter/material.dart';

void main() => runApp(TodoApp());

class TodoApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'To-Do List',
      theme: ThemeData(
        primarySwatch: Colors.brown, // Change primary color
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: TodoListScreen(),
    );
  }
}

class TodoListScreen extends StatefulWidget {
  @override
  _TodoListScreenState createState() => _TodoListScreenState();
}

class _TodoListScreenState extends State<TodoListScreen> {
  final List<TodoItem> _todoItems = [];

  // Function to add a new task
  void _addTodoItem(String task) {
    setState(() {
      _todoItems.add(TodoItem(task: task));
    });
  }

  // Function to remove a task
  void _removeTodoItem(int index) {
    setState(() {
      _todoItems.removeAt(index);
    });
  }

  // Function to mark task as completed
  void _toggleComplete(int index) {
    setState(() {
      _todoItems[index].isCompleted = !_todoItems[index].isCompleted;
    });
  }

  // Function to display dialog box for adding new tasks
  void _showAddTodoDialog() {
    TextEditingController taskController = TextEditingController();
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text(
            "Add New Task",
            style: TextStyle(color: Colors.black, fontWeight: FontWeight.bold),
          ),
          content: TextField(
            controller: taskController,
            decoration: InputDecoration(
              hintText: "Enter task here",
              filled: true,
              fillColor: Colors.grey[200],
              border: OutlineInputBorder(
                borderRadius: BorderRadius.circular(10.0),
              ),
            ),
          ),
          actions: <Widget>[
            TextButton(
              child: Text("Cancel", style: TextStyle(color: Colors.redAccent)),
              onPressed: () {
                Navigator.of(context).pop();
              },
            ),
            ElevatedButton(
              style: ElevatedButton.styleFrom(
                primary: Colors.brown, // Button color
              ),
              child: Text("Add"),
              onPressed: () {
                String task = taskController.text.trim();
                if (task.isNotEmpty) {
                  _addTodoItem(task);
                }
                Navigator.of(context).pop();
              },
            ),
          ],
        );
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.green[200],
      appBar: AppBar(
        title: Text('To-Do List', style: TextStyle(fontSize: 24)),
        centerTitle: true,
        elevation: 8.0,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.vertical(
            bottom: Radius.circular(15),
          ),
        ),
      ),
      body: Padding(
        padding: const EdgeInsets.all(12.0),
        child: _todoItems.isEmpty
            ? Center(
                child: Text(
                  'No tasks yet!',
                  style: TextStyle(fontSize: 18, color: Colors.black),
                ),
              )
            : ListView.builder(
                itemCount: _todoItems.length,
                itemBuilder: (context, index) {
                  final todoItem = _todoItems[index];
                  return Card(
                    elevation: 4.0,
                    margin: const EdgeInsets.symmetric(vertical: 8.0),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10),
                    ),
                    child: ListTile(
                      leading: Checkbox(
                        value: todoItem.isCompleted,
                        onChanged: (bool? value) {
                          _toggleComplete(index);
                        },
                      ),
                      title: Text(
                        todoItem.task,
                        style: TextStyle(
                          fontSize: 18,
                          decoration: todoItem.isCompleted
                              ? TextDecoration.lineThrough
                              : TextDecoration.none,
                        ),
                      ),
                      trailing: IconButton(
                        icon: Icon(Icons.delete, color: Colors.redAccent),
                        onPressed: () => _removeTodoItem(index),
                      ),
                    ),
                  );
                },
              ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _showAddTodoDialog,
        backgroundColor: Colors.brown,
        child: Icon(Icons.add),
      ),
    );
  }
}

class TodoItem {
  String task;
  bool isCompleted;

  TodoItem({required this.task, this.isCompleted = false});
}
